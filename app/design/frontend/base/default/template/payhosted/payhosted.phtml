<?php

        $obj              = new Paymentsense_Payhosted_Block_Form_Payhosted;
	$paymentAction    = Mage::getStoreConfig('payment/payhosted/payment_action');
	if($paymentAction == Mage_Paygate_Model_Authorizenet::ACTION_AUTHORIZE_CAPTURE)
		{
			$szTransactionType = "SALE";
		}
		else if($paymentAction == Mage_Paygate_Model_Authorizenet::ACTION_AUTHORIZE)
		{
			$szTransactionType = "PREAUTH";
		}
	
	$session          = Mage::getSingleton('checkout/session');
	$orderIncrementId = $session->getLastRealOrderId();
	$order            = Mage::getModel('sales/order')->loadByIncrementId($orderIncrementId);
	$billingaddress   = $order->getBillingAddress();
	$shippingaddress  = $order->getShippingAddress();	
	$currencyDesc     = Mage::app()->getStore()->getCurrentCurrencyCode();
	
	$address          = $billingaddress->getStreet();	
	$address1         = $shippingaddress->getStreet();	
        $PreSharedKey     = Mage::getStoreConfig('payment/payhosted/api_key');
        $MerchantPassword = Mage::getStoreConfig('payment/payhosted/api_password');
        $MerchantID       = trim(Mage::getStoreConfig('payment/payhosted/api_username'));
	//$TransactionType  = Mage::getStoreConfig('payment/payhosted/api_password');
	$baseCurrency_code    = Mage::app()->getBaseCurrencyCode();
	$storeId              = Mage::app()->getStore()->getId();
	$SelectedCurrency     = Mage::app()->getStore($storeId)->getCurrentCurrencyCode(); 
	$module_currency_code = Mage::getStoreConfig('payment/payhosted/payment_currency');
	$paymentSenseSelectedCurrency = explode(',',$module_currency_code);
	
	
		
	
	$curArray = array('USD', 'GBP', 'EUR');
	
	if(in_array($SelectedCurrency,$paymentSenseSelectedCurrency))
			
			{
			    $currcode = $SelectedCurrency;	
			}
		else if(in_array($baseCurrency_code,$paymentSenseSelectedCurrency))
			{
			    $currcode = $baseCurrency_code;
			}
		else if(in_array($baseCurrency_code, $curArray))
			{
				$currcode = $paymentSenseSelectedCurrency[0];
			}
		else
			{
				Mage::getSingleton('core/session')->addError('Currency Error');
				$url = Mage::getUrl('checkout/cart/index');
				echo  ("<script>location.href='$url'</script>");
				
			}
	
	Mage::getSingleton('core/session')->setPaymentCurrencyValue($currcode);	
	
	
	$allowedCurrencies = Mage::getModel('directory/currency')
		->getConfigAllowCurrencies();
		
	$currencyRates = Mage::getModel('directory/currency')
		->getCurrencyRates($baseCurrency_code, array_values($allowedCurrencies));
		
		//$baseCurrnecyrate  =  1/$currencyRates[Mage::app()->getStore()->getCurrentCurrencyCode()];
		 $grandTotal = $order->getData('base_grand_total');
		 $baseCurrnecyrate  =  $currencyRates[$currcode];
		
		if($currcode == 'EUR'){
		
				if($currcode = $baseCurrency_code && $baseCurrency_code !='')
				{
				//$newprice = number_format((float)($order->getGrandTotal()*$baseCurrnecyrate),'2', '.', '');
				$newprice = number_format((float)($grandTotal*$baseCurrnecyrate),'2', '.', '');
				
				}
				else
				{
				//$newprice = Mage::helper('directory')->currencyConvert($order->getGrandTotal(),'EUR',Mage::app()->getStore()->getCurrentCurrencyCode());
				$newprice = Mage::helper('directory')->currencyConvert($grandTotal,'EUR',Mage::app()->getStore()->getCurrentCurrencyCode());
				
				}
		               $currdes = '978';
		}
		elseif($currcode == 'GBP'){
		
			if($currcode = $baseCurrency_code && $baseCurrency_code !='')
			{
			//$newprice = number_format((float)($order->getGrandTotal()*$baseCurrnecyrate),'2', '.', '');
			$newprice = number_format((float)($grandTotal*$baseCurrnecyrate),'2', '.', '');
			
			}
			else
			{
			//$newprice = Mage::helper('directory')->currencyConvert($order->getGrandTotal(),Mage::app()->getStore()->getCurrentCurrencyCode(),'GBP');
			 $newprice = Mage::helper('directory')->currencyConvert($order->getGrandTotal(),Mage::app()->getStore()->getCurrentCurrencyCode(),'GBP');		
			
		   }
		   
			$currdes = '826';	
		
		   }
		else{
		
			if($currcode = $baseCurrency_code && $baseCurrency_code !='')
			{
			//$newprice = number_format((float)($order->getGrandTotal()*$baseCurrnecyrate),'2', '.', '');
			$newprice = number_format((float)($grandTotal*$baseCurrnecyrate),'2', '.', '');
			
			
			}
			else
			{
			//$newprice = Mage::helper('directory')->currencyConvert($order->getGrandTotal(),'USD',Mage::app()->getStore()->getCurrentCurrencyCode());
			$newprice = Mage::helper('directory')->currencyConvert($grandTotal,'USD',Mage::app()->getStore()->getCurrentCurrencyCode());
			}
			
			$currdes = '840';
		}
	$CurrencyCode=  $currdes;
        $OrderID = $orderIncrementId;
	$newprice = round($newprice,2);
	$totals = strval(($newprice)*100);
        $EmailAddress = $order->getData('customer_email');
        $PhoneNumber =$billingaddress->getData('telephone');
	// the transaction type - can be SALE or PREAUTH
	$TransactionType = $szTransactionType;
	
	// the GMT/UTC relative date/time for the transaction (MUST either be in GMT/UTC 
	// or MUST include the correct timezone offset)
	$TransactionDateTime = date('Y-m-d H:i:s P');
	// order description
	$OrderDescription = "Order:".$OrderID;
        $CallbackURL = Mage::getUrl('payhosted/index/success', array('_nosid' => true));
	// these variables allow the payment form to be "seeded" with initial values
	$CustomerName = $billingaddress->getData('firstname').' '.$billingaddress->getData('lastname');
	$Address1 = $address[0];
	$Address2 = $address[1];
	$Address3 = "";
	$Address4 = "";
	$City = $billingaddress->getCity();
	$State = $billingaddress->getRegion();
	$PostCode = $billingaddress->getPostcode();
        $CV2Mandatory = 'TRUE';
  	$Address1Mandatory = 'TRUE';
  	$CityMandatory = 'TRUE';
  	$PostCodeMandatory = 'TRUE';
  	$StateMandatory = 'TRUE';
  	$CountryMandatory = 'TRUE';
        $EchoAVSCheckResult = "TRUE";
	$EchoCV2CheckResult = "TRUE";
	$EchoThreeDSecureAuthenticationCheckResult = "TRUE";
	$EchoCardType = "TRUE";
	$EmailAddressEditable = "FALSE";
	$PhoneNumberEditable = "FALSE";
  	$ResultDeliveryMethod = 'SERVER_PULL';
    $ServerResultURL = Mage::getUrl('payhosted/index/success', array('_nosid' => true));
        
        $PaymentFormDisplaysResult = 'FALSE';
	
	$CountryCode = strval(826);
        $TransactionDateTime = date('Y-m-d H:i:s P');
        $szStringToHash = $obj->generateStringToHash(  $MerchantID,
						        $MerchantPassword,
							$totals,
							$CurrencyCode,
							$OrderID,
							$TransactionType,
							$TransactionDateTime,
							$CallbackURL,
							$OrderDescription,
							$CustomerName,
							$Address1,
							$Address2,
							$Address3,
							$Address4,
							$City,
							$State,
							$PostCode,
							$CountryCode,
							$CV2Mandatory,
							$Address1Mandatory,
							$CityMandatory,
							$PostCodeMandatory,
							$StateMandatory,
							$CountryMandatory,
							$ResultDeliveryMethod,
							$ServerResultURL,
							$PaymentFormDisplaysResult,
							$PreSharedKey,
							'SHA1'
							);
	//echo $szStringToHash;die();

	// pass this string into the hash function to create the hash digest
	$szHashDigest = $obj->calculateHashDigest( $szStringToHash,
						   $PreSharedKey, 
						   'SHA1'
						 );

?>
<form action="https://mms.paymentsensegateway.com/Pages/PublicPages/PaymentForm.aspx" method="post" id="redirectpay">
	
	<input type="hidden" name="HashDigest" value="<?php echo $szHashDigest ?>" />
	<input type="hidden" name="MerchantID" value="<?php echo $MerchantID ?>" />
	<input type="hidden" name="Amount" value="<?php echo $totals ?>" />
	<input type="hidden" name="CurrencyCode" value="<?php echo $CurrencyCode; ?>" />
	<input type="hidden" name="OrderID" value="<?php echo $OrderID ?>" />
	<input type="hidden" name="TransactionType" value="<?php echo $TransactionType ?>" />
	<input type="hidden" name="TransactionDateTime" value="<?php echo $TransactionDateTime ?>" />
	<input type="hidden" name="CallbackURL" value="<?php echo $CallbackURL ?>" />
	<input type="hidden" name="OrderDescription" value="<?php echo $OrderDescription ?>" />
	<input type="hidden" name="CustomerName" value="<?php echo $CustomerName ?>" />
	<input type="hidden" name="Address1" value="<?php echo $Address1 ?>" />
	<input type="hidden" name="Address2" value="<?php echo $Address2 ?>" />
	<input type="hidden" name="Address3" value="<?php echo $Address3 ?>" />
	<input type="hidden" name="Address4" value="<?php echo $Address4 ?>" />
	<input type="hidden" name="City" value="<?php echo $City ?>" />
	<input type="hidden" name="State" value="<?php echo $State ?>" />
	<input type="hidden" name="PostCode" value="<?php echo $PostCode ?>" />
	<input type="hidden" name="CountryCode" value="<?php echo$CountryCode ?>" />
	<input type="hidden" name="CV2Mandatory" value="<?php echo $CV2Mandatory ?>" />
	<input type="hidden" name="Address1Mandatory" value="<?php echo $Address1Mandatory ?>" />
	<input type="hidden" name="CityMandatory" value="<?php echo $CityMandatory ?>" />
	<input type="hidden" name="PostCodeMandatory" value="<?php echo $PostCodeMandatory ?>" />
	<input type="hidden" name="StateMandatory" value="<?php echo $StateMandatory ?>" />
	<input type="hidden" name="CountryMandatory" value="<?php echo $CountryMandatory ?>" />
	<input type="hidden" name="ResultDeliveryMethod" value="<?php echo $ResultDeliveryMethod ?>" />
	<input type="hidden" name="ServerResultURL" value="<?php echo $ServerResultURL ?>" />
	<input type="hidden" name="PaymentFormDisplaysResult" value="<?php echo $PaymentFormDisplaysResult ?>" />


	



        <input type="submit" value='Buy Now'/>
        
</form>

	<?php echo $this->__('If Page Doesn\'t Redirect In 5 Seconds, Please press Buy button');?>
	<script type="text/javascript">
	function myfunc () {
	var frm = document.getElementById("redirectpay");
	frm.submit();
	}
	window.onload = myfunc;
	</script>
 
			
